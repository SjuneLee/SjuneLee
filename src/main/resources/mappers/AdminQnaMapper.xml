<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="AdminQnaMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="qna" type="study.spring.seoul4u.model.Qna">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" />
		<result property="category" column="category" />
		<result property="qnaAnswerCondition" column="qna_answer_condition" />
		<result property="subject" column="subject" />
		<result property="name" column="name" />
		<result property="userId" column="user_id" />
		<result property="regDate" column="reg_date" />
		<result property="content" column="content" />
		<result property="qnaAnswer" column="qna_answer" />
		<result property="qnaAnswerDate" column="qna_answer_date" />
		<result property="search" column="search" />
		<result property="condition" column="condition" />
	</resultMap>
	
	<select id="selectQnaList" parameterType="study.spring.seoul4u.model.Qna" resultMap="qna">
		SELECT c.id, c.category, c.qna_answer, c.qna_answer_condition, c.qna_secret_condition, 
		c.subject, m.name, c.content as content, DATE_FORMAT(c.reg_date, '%Y-%m-%d') AS reg_date, 
		DATE_FORMAT(c.qna_answer_date, '%Y-%m-%d') as qna_answer_date,
		c.hit, c.member_id
		FROM customer_center c
		LEFT OUTER JOIN member m ON c.member_id=m.id 
		<where>
		category='qna'		
			<if test="subject != null or content != null">
				<if test="condition == 1">
				AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
					<if test="search == 'qnaAnswer'">
						qna_answer LIKE concat('%', #{qnaAnswer}, '%')
					</if> 
						)			
				</if>
				
				<if test="condition == 2">
				AND qna_answer_condition = 'Y' AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
					<if test="search == 'qnaAnswer'">
						qna_answer LIKE concat('%', #{qnaAnswer}, '%')
					</if> 
						)			
				</if>
				
				<if test="condition == 3">
				AND qna_answer_condition = 'N' AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
					<if test="search == 'qnaAnswer'">
						qna_answer LIKE concat('%', #{qnaAnswer}, '%')
					</if> 
						)			
				</if>
			</if>
		</where> 
		ORDER BY id DESC
		LIMIT #{limitStart}, #{listCount}
	</select>
	
	<!-- 전체 게시물 수를 조회한다. -->
 	<select id="selectQnaCount" parameterType="study.spring.seoul4u.model.Qna" resultType="int">
		SELECT COUNT(id)
		FROM customer_center 
 		<where>
			category='qna'
			
			<if test="condition == 1">
				AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
					<if test="search == 'qnaAnswer'">
						qna_answer LIKE concat('%', #{qnaAnswer}, '%')
					</if> 
						)			
				</if>
				
				<if test="condition == 2">
				AND qna_answer_condition = 'Y' AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
					<if test="search == 'qnaAnswer'">
						qna_answer LIKE concat('%', #{qnaAnswer}, '%')
					</if> 
						)			
				</if>
				
				<if test="condition == 3">
				AND qna_answer_condition = 'N' AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
					<if test="search == 'qnaAnswer'">
						qna_answer LIKE concat('%', #{qnaAnswer}, '%')
					</if> 
						)			
				</if>
 
		</where> 
	</select>
		
	<select id="selectQnaItem" parameterType="study.spring.seoul4u.model.Qna" resultMap="qna">
		SELECT c.id, c.subject, m.name, m.user_id, c.reg_date, c.content, c.qna_answer
		FROM customer_center c
		LEFT OUTER JOIN member m ON c.member_id = m.id
		WHERE c.id=#{id}
	</select>
	
	<!-- 이전글 정보를 조회한다. -->
	<select id="selectPrevQna"
		parameterType="study.spring.seoul4u.model.Qna"
		resultMap="qna">
		SELECT c.id, c.qna_answer_condition, c.qna_answer, c.subject, m.name, m.user_id, 
		DATE_FORMAT(c.reg_date, '%Y-%m-%d') AS reg_date, c.content, c.hit, c.qna_answer_date, c.member_id
		FROM customer_center c
		INNER JOIN member m ON c.member_id = m.id
		WHERE  category='qna' AND c.id &lt; #{id}
		ORDER  BY id DESC
		LIMIT  0, 1
	</select>
	
	<!-- 다음글 정보를 조회한다. -->
	<select id="selectNextQna"
		parameterType="study.spring.seoul4u.model.Qna"
		resultMap="qna">
		SELECT c.id, c.qna_answer_condition, c.qna_answer, c.subject, m.name, m.user_id, 
		DATE_FORMAT(c.reg_date, '%Y-%m-%d') AS reg_date, c.content, c.hit, c.qna_answer_date, c.member_id
		FROM customer_center c
		INNER JOIN member m ON c.member_id = m.id
		WHERE  category='qna' AND c.id &gt; #{id}
		ORDER  BY id ASC
		LIMIT  0, 1
	</select>
	
	<!-- 전체 게시물 수를 조회한다. -->
	<select id="selectAdminQnaCount"
		parameterType="study.spring.seoul4u.model.Qna"
		resultType="int">
		SELECT COUNT(id) FROM customer_center
		<where>
			category='qna'
			<if test="subject != null or content != null">
				AND (
					<if test="search == 'subject'">
						subject LIKE concat('%', #{subject}, '%')
					</if>
					<if test="search == 'content'">
						content LIKE concat('%', #{content}, '%')
					</if>
						)
				</if>
		</where>
	</select>
	
	<delete id="deleteQna" parameterType="study.spring.seoul4u.model.Qna">
		DELETE FROM customer_center WHERE id=#{id}
	</delete>
	
	<update id="editQna" parameterType="study.spring.seoul4u.model.Qna">
		UPDATE customer_center SET qna_answer=#{qnaAnswer}, qna_answer_condition=#{qnaAnswerCondition}
		, qna_answer_date=now() 
		WHERE id=#{id}
	</update>
	
	
</mapper>